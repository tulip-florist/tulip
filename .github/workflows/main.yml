name: Build and upload to S3

on:
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Create production build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: doc-viewer

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Npm CI
        run: |
          npm ci

      - name: Npm Test
        run: |
          npm run test

      - name: Production Build
        run: |
          npm run build --if-present
        env:
          CI: ""

      # - name: Initialize CodeQL
      #   uses: github/codeql-action/init@v1
      #   with:
      #     languages: "javascript"

      # - name: Perform CodeQL Analysis
      #   uses: github/codeql-action/analyze@v1

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: doc-viewer/build
          if-no-files-found: error

  deploy:
    name: S3 upload & Invalidate Cloudfront
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-artifact

      - name: Upload build to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_PRODUCTION_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Invalidate Cloudfront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION }}
          PATHS: "/*"
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
